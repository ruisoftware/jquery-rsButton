@background: #454545;     // recommended #454545 for dark layout and #f2f2f2 for light layout
@deltaContrast: 12%;      // recommended 12% for dark layout and 18% for light layout

@text: #bab026;

// scalar values
// ===============
@refScale: 1.5vw;   // Allowed units are: px, pt (for fixed layout) or em, rem, vw, vh, vmin, vmax (for elastic layout).
                  // To try other sizes, you only need to change this line. All the rest will resize according to this @refScale
                  // 1em corresponds to 16px in most browsers, which is the default font size.
                  // However, some users might define another default font size for accessibility reasons.
                  // To convert px to em, do em = px/16. Example: 8px = .5em

@font-size: @refScale;
@fromGradientOuter: darken(@background, @deltaContrast);
@toGradientOuter: lighten(@background, @deltaContrast);

@fromGradientInner: darken(@toGradientOuter, 10%);
@toGradientInner: darken(@fromGradientOuter, 2%);

@borderColor: darken(@fromGradientOuter, lightness(@background)/10 + 3%);

.btn,
.btnflat {
  position: relative;
  display: inline-block;
  vertical-align: top;
  font-size: @font-size;
  .padding(@refScale*.375, @refScale*.875);
  .margin(@refScale*.0625, @refScale*.375);
  border: @refScale*.0625 solid @borderColor; 
  border-bottom-width: @refScale*.0625;
  .border-radius(@refScale*.375);
  cursor: pointer;
  outline: none;
  .user-select(none);
  text-shadow: 0 @refScale*-.0625 @refScale*.0625 @background;
  background: @background;
  color: saturate(@text, 25%);
  
  &:before,
  &:after {
    content: '';
    position: absolute;
    .border-radius(@refScale*.3125);
  }

  &:before {
    .border-radius(@refScale*.5);
    background: @background;
    .lineargradient(top, @fromGradientOuter, @toGradientOuter);
    z-index: -1;
  }
  &:after {
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border: @refScale*.125 solid fade(@fromGradientOuter, 70%);
    border-top-color: fade(@toGradientOuter, 70%);
    border-bottom: none;
  }
  &.frm2:after {
    border-color: fade(@fromGradientOuter, 55%);
    border-top-color: fade(@toGradientOuter, 55%);
  }
  &.frm3:after {
    border-color: fade(@fromGradientOuter, 40%);
    border-top-color: fade(@toGradientOuter, 40%);
  }
}

.btn {
  padding-bottom: @refScale*.3125;
  .box-shadow(0 @refScale*.0625 @refScale*.0625 hsla(0, 0%, 0%, .2), 0 @refScale*.25 @refScale*.4375 @refScale*-.1875 hsla(0, 0%, 0%, .5));
  &:before {
    top: @refScale*-.3125;
    left: @refScale*-.3125;
    right: @refScale*-.3125;
    bottom: @refScale*-.3125;
  }
  &:after {
    .lineargradient(top, fade(@fromGradientInner, 50%) 0%, fade(@fromGradientInner, 50%) 47%, fade(@toGradientInner, 40%) 53%, fade(@toGradientInner, 80%) 100%);
  }
  
  &.frm2 {
    .box-shadow(0 @refScale*.0625 @refScale*.0625 darken(@borderColor, 1%));
    background: darken(@background, 3%);
  }
  
  &.frm3 {
    .padding(@refScale*.40625, @refScale*.875, @refScale*.28125);
    margin-bottom: 0;
    border-bottom: @refScale*.125 solid lighten(@borderColor, 2%);
    .box-shadow(none);
    background: darken(@background, 5%);
    &:after {
      .lineargradient(top, fade(@fromGradientInner, 50%) 0%, fade(@fromGradientInner, 50%) 44%, fade(@toGradientInner, 40%) 50%, fade(@toGradientInner, 80%) 100%);
    }
  }
}

.btnflat {
  color: @text;
  .box-shadow(0 4px 1px -0.1875em rgba(0, 0, 0, 0.4));
  &:before {
    top: @refScale*-.25;
    left: @refScale*-.25;
    right: @refScale*-.25;
    bottom: @refScale*-.25;
  }
  &:after {
    border-width: @refScale*.0625;
  }
  &.frm2 {
    .box-shadow(0 3px 1px -0.1875em rgba(0, 0, 0, 0.4));
    &:after {
      .lineargradient(top, fade(@background, 8%) 0%, fade(@toGradientInner, 8%) 100%);
    }
  }
  &.frm3 {
    .box-shadow(inset 0 3px 6px -5px rgba(0,0,0,.5));
    &:after {
      .lineargradient(top, fade(@background, 20%) 0%, fade(@toGradientInner, 20%) 100%);
    }
  }
}



// mixins
// ===============
.padding(@padding) {
  .padding(@padding, @padding, @padding, @padding);
}

.padding(@topBottom, @rightLeft) {
  .padding(@topBottom, @rightLeft, @topBottom, @rightLeft);
}

.padding(@top, @right, @bottom) {
  .padding(@top, @right, @bottom, @right);
}

.padding(@top, @right, @bottom, @left) when(@top = @right) and (@right = @bottom) and (@bottom = @left) {
  padding: @top;
}

.padding(@top, @right, @bottom, @left) when (@top = @bottom) and (@right = @left) and not (@top = @right) {
  padding: @top @right;
}

.padding(@top, @right, @bottom, @left) when not (@top = @bottom), not (@right = @left) {
  padding: @top @right @bottom @left;
}

.margin(@margin) {
  .margin(@margin, @margin, @margin, @margin);
}

.margin(@topBottom, @rightLeft) {
  .margin(@topBottom, @rightLeft, @topBottom, @rightLeft);
}

.margin(@top, @right, @bottom) {
  .margin(@top, @right, @bottom, @right);
}

.margin(@top, @right, @bottom, @left) when (@top = @right) and (@right = @bottom) and (@bottom = @left) {
  margin: @top;
}

.margin(@top, @right, @bottom, @left) when (@top = @bottom) and (@right = @left) and not (@top = @right) {
  margin: @top @right;
}

.margin(@top, @right, @bottom, @left) when not (@top = @bottom), not (@right = @left) {
  margin: @top @right @bottom @left;
}

.lineargradient(@g1, @g2, @g3) {
  background: -webkit-linear-gradient(@g1, @g2, @g3);
  background: -moz-linear-gradient(@g1, @g2, @g3);
  background: -o-linear-gradient(@g1, @g2, @g3);
  background: -ms-linear-gradient(@g1, @g2, @g3);
  background: linear-gradient(@g1, @g2, @g3);
}
.lineargradient(@g1, @g2, @g3, @g4) {
  background: -webkit-linear-gradient(@g1, @g2, @g3, @g4);
  background: -moz-linear-gradient(@g1, @g2, @g3, @g4);
  background: -o-linear-gradient(@g1, @g2, @g3, @g4);
  background: -ms-linear-gradient(@g1, @g2, @g3, @g4);
  background: linear-gradient(@g1, @g2, @g3, @g4);
}
.lineargradient(@g1, @g2, @g3, @g4, @g5) {
  background: -webkit-linear-gradient(@g1, @g2, @g3, @g4, @g5);
  background: -moz-linear-gradient(@g1, @g2, @g3, @g4, @g5);
  background: -o-linear-gradient(@g1, @g2, @g3, @g4, @g5);
  background: -ms-linear-gradient(@g1, @g2, @g3, @g4, @g5);
  background: linear-gradient(@g1, @g2, @g3, @g4, @g5);
}

.border-radius(@radius) {
  -webkit-border-radius: @radius;
  -moz-border-radius: @radius;
  -o-border-radius: @radius;
  border-radius: @radius;
}

.box-shadow(@shadow) {
  -webkit-box-shadow: @shadow;
  -moz-box-shadow: @shadow;
  -o-box-shadow: @shadow;
  box-shadow: @shadow;
}

.box-shadow(@shadow1, @shadow2) {
  -webkit-box-shadow: @shadow1, @shadow2;
  -moz-box-shadow: @shadow1, @shadow2;
  -o-box-shadow: @shadow1, @shadow2;
  box-shadow: @shadow1, @shadow2;
}

.user-select(@s) {
  -o-user-select: @s;
  -moz-user-select: @s;
  -webkit-user-select: @s;
  user-select: @s;
}
