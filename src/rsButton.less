@background: #454545;     // recommended #454545 for dark layout and #e2e2e2 for light layout
@deltaContrast: 12%;      // recommended 12% for dark layout and 18% for light layout

@text: #bab026;

// scalar values
// ===============
@refScale: 3em;   // Allowed units are: px, pt (for fixed layout) or em, rem, vw, vh, vmin, vmax (for elastic layout).
                  // To try other sizes, you only need to change this line. All the rest will resize according to this @refScale
                  // 1em corresponds to 16px in most browsers, which is the default font size.
                  // However, some users might define another default font size for accessibility reasons.
                  // To convert px to em, do em = px/16. Example: 8px = .5em

@font-size: @refScale;
@fromGradientOuter: darken(@background, @deltaContrast);
@toGradientOuter: lighten(@background, @deltaContrast);

@fromGradientInner: darken(@toGradientOuter, 10%);
@toGradientInner: darken(@fromGradientOuter, 2%);

@borderColor: darken(@fromGradientOuter, lightness(@background)/10 + 3%);

body {
    background-color: @background;
}

.btn,
.btnflat {
    position: relative;
    display: inline-block;
    vertical-align: top;
    font-size: @font-size;
    .padding(@refScale*.375, @refScale*.875);
    .margin(@refScale*.0625, @refScale*.375);
    border: @refScale*.0625 solid @borderColor; 
    border-bottom-width: @refScale*.0625;
    .border-radius(@refScale*.375);
    cursor: pointer;
    outline: none;
    .user-select(none);
    text-shadow: 0 @refScale*-.0625 @refScale*.0625 @background;
    background: @background;
    color: saturate(@text, 25%);
    overflow: visible; // in order for IE to display the :before pseudo element that overflows the button
  
    &:before,
    &:after {
        content: '';
        position: absolute;
        .border-radius(@refScale*.3125);
    }

    &:before {
        .border-radius(@refScale*.5);
        background: @background;
        .lineargradient(top, @fromGradientOuter, @toGradientOuter);
        z-index: -1;
    }
    &:after {
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        border: @refScale*.125 solid fade(@fromGradientOuter, 70%);
        border-top-color: fade(@toGradientOuter, 70%);
        border-bottom: none;
    }
    &.frm2:after {
        border-color: fade(@fromGradientOuter, 55%);
        border-top-color: fade(@toGradientOuter, 55%);
        border-width: @refScale*.083;
    }
    &.frm3:after {
        border-color: fade(@fromGradientOuter, 40%);
        border-top-color: fade(@toGradientOuter, 40%);
        border-width: @refScale*.03125;
    }
    &.frm4:after {
        border: none;
    }
}

.btn {
    padding-bottom: @refScale*.3125;
    box-shadow: 0 @refScale*.0625 @refScale*.0625 hsla(0, 0%, 0%, .2), 0 @refScale*.25 @refScale*.4375 @refScale*-.1875 hsla(0, 0%, 0%, .5);
    &:before {
        top: @refScale*-.3125;
        left: @refScale*-.3125;
        right: @refScale*-.3125;
        bottom: @refScale*-.3125;
    }
    &:after {
        .lineargradient(top, fade(@fromGradientInner, 50%) 0%, fade(@fromGradientInner, 50%) 45%, fade(@toGradientInner, 40%) 55%, fade(@toGradientInner, 80%) 100%);
    }
  
    &.frm2 {
        box-shadow: 0 @refScale*.0625 @refScale*.0625 darken(@borderColor, 1%);
        background: darken(@background, 1%);
    }

    &.frm3,
    &.frm4 {
        .padding(@refScale*.40625, @refScale*.875, @refScale*.28125);
        margin-bottom: 0;
        border-color: lighten(@borderColor, 2%);
        border-bottom: @refScale*.125 solid lighten(@borderColor, 4%);
        box-shadow: inset 0 @refScale*.25 @refScale*.3 darken(@fromGradientOuter, 3%);
        background: darken(@background, 2%);
        &:after {
            .lineargradient(top, fade(@fromGradientInner, 50%) 0%, fade(@fromGradientInner, 50%) 41%, fade(@toGradientInner, 40%) 53%, fade(@toGradientInner, 80%) 100%);
        }
    }
    &.frm4 {
        border-color: lighten(@borderColor, 3%);
        border-bottom-color: lighten(@borderColor, 5%);
        box-shadow: inset 0 @refScale*.15 @refScale*.3 darken(@fromGradientOuter, 3%);
        background: darken(@background, 2.5%);
    }
    
    input& {
        box-shadow: 0 0 @refScale*.125 @borderColor;
        &.frm2 {
            background: darken(@background, 1.25%);
            box-shadow: 0 0 @refScale*.0625 darken(@borderColor, 1%);
        }
        &.frm3 {
            box-shadow: none;
            border-bottom: none;
        }
        &.frm4 {
            box-shadow: inset 0 0 @refScale*.2 darken(@fromGradientOuter, 3%);
            border-bottom-width: @refScale*.0625;
            background: darken(@background, 1.5%);
        }
    }
}

.btnflat {
    color: @text;
    box-shadow: 0 @refScale*.25 @refScale*.0625 @refScale*-.1875 rgba(0, 0, 0, .4);
    &:before {
        top: @refScale*-.25;
        left: @refScale*-.25;
        right: @refScale*-.25;
        bottom: @refScale*-.25;
    }
    &:after {
        border-width: @refScale*.0625;
    }
    &.frm2 {
        box-shadow: 0 @refScale*.1875 @refScale*.0625 @refScale*-.1875 rgba(0, 0, 0, .4);
        &:after {
            .lineargradient(top, fade(@background, 8%) 0%, fade(@toGradientInner, 8%) 100%);
        }
    }
    &.frm3,
    &.frm4 {
        background: darken(@background, .125%);
        box-shadow: inset 0 @refScale*.1875 @refScale*.375 @refScale*-.3125 rgba(0,0,0,.5);
        &:after {
            .lineargradient(top, fade(@background, 20%) 0%, fade(@toGradientInner, 20%) 100%);
        }
    }
    &.frm4 {
        background: darken(@background, .25%);
    }
}



// mixins
// ===============
.padding(@padding) {
    .padding(@padding, @padding, @padding, @padding);
}

.padding(@topBottom, @rightLeft) {
    .padding(@topBottom, @rightLeft, @topBottom, @rightLeft);
}

.padding(@top, @right, @bottom) {
    .padding(@top, @right, @bottom, @right);
}

.padding(@top, @right, @bottom, @left) when(@top = @right) and (@right = @bottom) and (@bottom = @left) {
    padding: @top;
}

.padding(@top, @right, @bottom, @left) when (@top = @bottom) and (@right = @left) and not (@top = @right) {
    padding: @top @right;
}

.padding(@top, @right, @bottom, @left) when not (@top = @bottom), not (@right = @left) {
    padding: @top @right @bottom @left;
}

.margin(@margin) {
    .margin(@margin, @margin, @margin, @margin);
}

.margin(@topBottom, @rightLeft) {
    .margin(@topBottom, @rightLeft, @topBottom, @rightLeft);
}

.margin(@top, @right, @bottom) {
    .margin(@top, @right, @bottom, @right);
}

.margin(@top, @right, @bottom, @left) when (@top = @right) and (@right = @bottom) and (@bottom = @left) {
    margin: @top;
}

.margin(@top, @right, @bottom, @left) when (@top = @bottom) and (@right = @left) and not (@top = @right) {
    margin: @top @right;
}

.margin(@top, @right, @bottom, @left) when not (@top = @bottom), not (@right = @left) {
    margin: @top @right @bottom @left;
}

.lineargradient(@g1, @g2, @g3) {
    background: -webkit-linear-gradient(@g1, @g2, @g3);
    background: -moz-linear-gradient(@g1, @g2, @g3);
    background: -o-linear-gradient(@g1, @g2, @g3);
    background: -ms-linear-gradient(@g1, @g2, @g3);
    background: linear-gradient(@g1, @g2, @g3);
}

.lineargradient(@g1, @g2, @g3, @g4) {
    background: -webkit-linear-gradient(@g1, @g2, @g3, @g4);
    background: -moz-linear-gradient(@g1, @g2, @g3, @g4);
    background: -o-linear-gradient(@g1, @g2, @g3, @g4);
    background: -ms-linear-gradient(@g1, @g2, @g3, @g4);
    background: linear-gradient(@g1, @g2, @g3, @g4);
}

.lineargradient(@g1, @g2, @g3, @g4, @g5) {
    background: -webkit-linear-gradient(@g1, @g2, @g3, @g4, @g5);
    background: -moz-linear-gradient(@g1, @g2, @g3, @g4, @g5);
    background: -o-linear-gradient(@g1, @g2, @g3, @g4, @g5);
    background: -ms-linear-gradient(@g1, @g2, @g3, @g4, @g5);
    background: linear-gradient(@g1, @g2, @g3, @g4, @g5);
}

.border-radius(@radius) {
    -webkit-border-radius: @radius;
    -moz-border-radius: @radius;
    -o-border-radius: @radius;
    border-radius: @radius;
}

.user-select(@s) {
    -o-user-select: @s;
    -moz-user-select: @s;
    -webkit-user-select: @s;
    user-select: @s;
}
